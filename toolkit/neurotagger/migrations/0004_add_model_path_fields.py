# Generated by Django 2.1.14 on 2019-11-29 07:57

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('neurotagger', '0001_initial_squashed_0003_auto_20191121_1406'),
    ]

    operations = [
        migrations.AddField(
            model_name='neurotagger',
            name='model',
            field=models.FileField(default=None, null=True, upload_to='data/models/neurotagger', verbose_name=''),
        ),
        migrations.AddField(
            model_name='neurotagger',
            name='tokenizer_model',
            field=models.FileField(default=None, null=True, upload_to='data/models/neurotagger', verbose_name=''),
        ),
        migrations.AddField(
            model_name='neurotagger',
            name='tokenizer_vocab',
            field=models.FileField(default=None, null=True, upload_to='data/models/neurotagger', verbose_name=''),
        ),
        migrations.AlterField(
            model_name='neurotagger',
            name='fact_name',
            field=models.CharField(blank=True, help_text='Fact name from which to get value and generate classes/queries from', max_length=1000),
        ),
        migrations.AlterField(
            model_name='neurotagger',
            name='fact_values',
            field=models.TextField(blank=True, help_text='Fact values/class names that come from the given fact name'),
        ),
        migrations.AlterField(
            model_name='neurotagger',
            name='max_fact_doc_count',
            field=models.IntegerField(blank=True, help_text='Number of maximum documents that when a fact has, it will not be used as a class', null=True),
        ),
        migrations.AlterField(
            model_name='neurotagger',
            name='min_fact_doc_count',
            field=models.IntegerField(blank=True, default=50, help_text='Number of minimum documents that a fact value needs to have before its used as a class'),
        ),
        migrations.AlterField(
            model_name='neurotagger',
            name='model_architecture',
            field=models.CharField(choices=[('fnn', 'fnn'), ('cnn', 'cnn'), ('gru', 'gru'), ('lstm', 'lstm'), ('gruCNN', 'gruCNN'), ('lstmCNN', 'lstmCNN')], help_text='Neural network model architecture', max_length=10),
        ),
        migrations.AlterField(
            model_name='neurotagger',
            name='num_epochs',
            field=models.IntegerField(default=5, help_text='Number of training passes through the data'),
        ),
        migrations.AlterField(
            model_name='neurotagger',
            name='queries',
            field=models.TextField(default='[]', help_text='Queries that will be generated from the given fact name'),
        ),
        migrations.AlterField(
            model_name='neurotagger',
            name='seq_len',
            field=models.IntegerField(default=150, help_text='Sequence length every input document will be cropped to, in order to save gpu memory and training speed'),
        ),
        migrations.AlterField(
            model_name='neurotagger',
            name='validation_split',
            field=models.FloatField(default=0.2, help_text='Percentage of data that will be used for validating instead of training'),
        ),
        migrations.AlterField(
            model_name='neurotagger',
            name='vocab_size',
            field=models.IntegerField(default=30000, help_text='Number of words that will be used in the vocabulary of the model'),
        ),
        migrations.AlterField(
            model_name='neurotagger',
            name='model',
            field=models.FileField(default=None, max_length=300, null=True, upload_to='data/models/neurotagger', verbose_name=''),
        ),

        migrations.AlterField(
            model_name='neurotagger',
            name='tokenizer_model',
            field=models.FileField(default=None, max_length=300, null=True, upload_to='data/models/neurotagger', verbose_name=''),
        ),

        migrations.AlterField(
            model_name='neurotagger',
            name='tokenizer_vocab',
            field=models.FileField(default=None, max_length=300, null=True, upload_to='data/models/neurotagger', verbose_name=''),
        )
    ]
